using UnityEngine;
using UnityEditor;
using UnityEditorInternal;
using System.IO;
using System.Text;

public class TagEnumGenerator : EditorWindow
{
    private const string enumName = "TagEnum";

    [MenuItem("Tools/Generate Tag Enum")]
    public static void GenerateTagEnum()
    {
        string pathForSaving = EditorUtility.SaveFilePanel("Speichere TagEnum-Klasse", "Assets", "TagEnum" + ".cs", "cs");
        if (string.IsNullOrEmpty(pathForSaving)) return;

        string[] tags = InternalEditorUtility.tags;
        StringBuilder sb = new StringBuilder();

        sb.AppendLine("// Auto-generated by TagEnumGenerator");
        sb.AppendLine("namespace AutoGenerated");
        sb.AppendLine("{");
        sb.AppendLine($"    public static class {enumName}");
        sb.AppendLine("    {");

        foreach (string tag in tags)
        {
            string safeName = MakeSafeEnumName(tag);
            sb.AppendLine($"        public const string {safeName} = \"{tag}\";");
        }

        sb.AppendLine("    }");
        sb.AppendLine("}");

        File.WriteAllText(pathForSaving, sb.ToString());

        AssetDatabase.Refresh();

        Debug.Log($"✅ Tag enum generated at: {pathForSaving}");
    }

    private static string MakeSafeEnumName(string tag)
    {
        // Ersetzt Leerzeichen und Sonderzeichen für gültige Feldnamen
        string safe = tag.Replace(" ", "_").Replace("-", "_");
        return char.IsDigit(safe[0]) ? "_" + safe : safe;
    }
}
